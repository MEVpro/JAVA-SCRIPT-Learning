// запуск игры
// скрипт размещает корабль
// начало боя
// повторяем действия: запрос у пользователя координат, сравнение с положением корабля
// игра окончена, выводим оценку
/*
ЦИКЛ: пока корабль не потоплен
	ПОЛУЧИТЬ координаты выстрела от пользователя
	СРАВНИТЬ введенные данные с диапазоном корректных значений
	ЕСЛИ введенные данные некорректны,
		ВЫВЕСТИ сообщение с предложением ввести правильное число
	ИНАЧЕ
		ПРИБАВИТЬ один к guesses
		ЕСЛИ выстрел попал в корабль
			ПРИБАВИТЬ один к количеству попаданий
			ЕСЛИ количество попаданий равно трем
				ПРИСВОИТЬ isSunk значение true
				ВЫВЕСТИ сообщение «Корабль потоплен!»
			КОНЕЦ ЕСЛИ
		КОНЕЦ ЕСЛИ
	КОНЕЦ ИНАЧЕ
КОНЕЦ ЦИКЛА
ВЫВЕСТИ статистику
*/
/*******************************ПЕРВЫЙ***ВАРИАНТ*******************/

/*		var location1 = 3;
		var location2 = 4;
		var location3 = 5;

		var hits = 0;
		var guesses = 0;
		var guess;
		var isSunk = false


		while(isSunk == false){
			guess = prompt('Хочешь потопить корабль, введи число от 0 до 6?');
			if (guess < 0 || guess >6) {
				alert('Я же просил от 0 до шести!');
			} else {
					guesses = guesses + 1;
					if (guess == location1 || guess == location2 || guess == location3) {
						alert('Поподание!');
						hits = hits + 1;
							if (hits == 3) {
								alert('Корабль убит!');
								isSunk = true;
								}
					}else{
						alert("Мимо!")
						}
			}
		}
		var status = 'Вы победили в игре с ' + guesses + ' попытки! Ваш уровень точности: ' + (3/guesses);
		alert(status);
*/

/******************************ВТОРОЙ***ВАРИАНТ*******************/
		var random = Math.floor(Math.random() * 5); // Math.random - случайное число 0 - 1; Math.floor - преобразует в челое число;

		var location1 = random;
		var location2 = location1 + 1;
		var location3 = location2 + 1;

		var hits = 0;
		var guesses = 0;
		var guess;
		var isSunk = false


		while(isSunk == false){
			guess = prompt('Хочешь потопить корабль, введи число от 0 до 6?');
			if (guess < 0 || guess >6) {
				alert('Я же просил от 0 до шести!');
			} else {
					guesses = guesses + 1;
					if (guess == location1 || guess == location2 || guess == location3) {
						alert('Поподание!');
						hits = hits + 1;
							if (hits == 3) {
								alert('Корабль убит!');
								isSunk = true;
								}
					}else{
						alert("Мимо!")
						}
			}
		}
		var status = 'Вы победили в игре с ' + guesses + ' попытки! Ваш уровень точности: ' + (3/guesses);
		alert(status);
/*
Булевские операторы используются в логических выражениях, результатом которых 
является значение true или false. Булевские операторы делятся на два вида: 
операторы сравнения и логические операторы.

Операторы сравнения
Операторы сравнения сопоставляют
два значения:
<> “меньше” “больше”
== “равно”
=== “в точности равно” (мы еще вернемся к этому оператору!)
<= “меньше либо равно”
>= “больше либо равно”
!= “не равно”

Логические операторы
Логические операторы объединяют два булевских выражения и создают
один результат true или false. Два важнейших логических оператора:

|| - ИЛИ. Результат будет истинным, если истинно хотя бы одно из двух выражений.

&& - И. Результат будет истинным, если истинны оба выражения.

! - НЕ. Результат будет истинным, если выражение ложно.  — применяется к одному булевскому выражению (вместо двух)

*/

